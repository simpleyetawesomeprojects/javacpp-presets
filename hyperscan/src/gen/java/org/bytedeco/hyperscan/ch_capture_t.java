// Targeted by JavaCPP version 1.5.8-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.hyperscan;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.hyperscan.global.hyperscan.*;


/** \} */

/**
 * Structure representing a captured subexpression within a match. An array of
 * these structures corresponding to capture groups in order is passed to the
 * callback on match, with active structures identified by the
 * CH_CAPTURE_FLAG_ACTIVE flag.
 */
@Properties(inherit = org.bytedeco.hyperscan.presets.hyperscan.class)
public class ch_capture_t extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public ch_capture_t() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public ch_capture_t(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ch_capture_t(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public ch_capture_t position(long position) {
        return (ch_capture_t)super.position(position);
    }
    @Override public ch_capture_t getPointer(long i) {
        return new ch_capture_t((Pointer)this).offsetAddress(i);
    }

    /**
     * The flags indicating if this structure is active.
     */
    public native @Cast("unsigned int") int flags(); public native ch_capture_t flags(int setter);

    /**
     * offset at which this capture group begins.
     */
    public native @Cast("unsigned long long") long from(); public native ch_capture_t from(long setter); /*< offset at which this capture group begins. */

    /**
     * offset at which this capture group ends.
     */
    public native @Cast("unsigned long long") long to(); public native ch_capture_t to(long setter);
}
